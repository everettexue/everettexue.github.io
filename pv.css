:root{
  --bg: #000000;
  --thin-color: #ccc;        /* bright gray */
  --thick-color: #888;       /* guide line color */
  --cell: 40px;              /* cell size (integer px helps) */
  --half: calc(var(--cell) / 2);
  --thin-w: 1px;             /* use 1px to avoid subpixel gaps */
  --thick-step-cells: 5;     /* guide every N cells */
  --thick-w: 2px;
}

/* full-viewport */
html,body{ height:100%; margin:0; }

body{
  background-color: var(--bg);

  /*
    Order of images: thick vertical, thick horizontal, thin vertical, thin horizontal
    We use linear-gradients + background-size to tile precisely so no lines disappear.
  */
  background-image:
    /* thick vertical line (1 column in a N-cell tile) */
    linear-gradient(to right,
      var(--thick-color) 0 calc(var(--thick-w)),
      transparent calc(var(--thick-w)) 100%),
    /* thick horizontal line */
    linear-gradient(to bottom,
      var(--thick-color) 0 calc(var(--thick-w)),
      transparent calc(var(--thick-w)) 100%),
    /* thin vertical lines */
    linear-gradient(to right,
      var(--thin-color) 0 calc(var(--thin-w)),
      transparent calc(var(--thin-w)) 100%),
    /* thin horizontal lines */
    linear-gradient(to bottom,
      var(--thin-color) 0 calc(var(--thin-w)),
      transparent calc(var(--thin-w)) 100%);

  /* precise tiling sizes */
  background-size:
    /* thick vertical tile width = cell * thick-step, full height */
    calc(var(--cell) * var(--thick-step-cells)) 100%,
    /* thick horizontal tile height = cell * thick-step, full width */
    100% calc(var(--cell) * var(--thick-step-cells)),
    /* thin vertical tile width = cell, full height */
    var(--cell) 100%,
    /* thin horizontal tile height = cell, full width */
    100% var(--cell);

  /* offset everything by half a cell so lines start centered */
  background-position:
    var(--half) var(--half),
    var(--half) var(--half),
    var(--half) var(--half),
    var(--half) var(--half);

  background-repeat: repeat;
}
